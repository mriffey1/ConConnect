name: Update PR with Commit Messages

on:
  push:
    branches:
      - documentation-updates

jobs:
  update_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to ensure you have the full commit history

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Authenticate GitHub CLI
        run: gh auth setup-git
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch all branches
        run: git fetch --all

      - name: Get commit message bodies with hashes and changed files
        id: get_commit_bodies
        run: |
          repo_url=""
          commit_data=$(git log origin/main..origin/documentation-updates --name-only --pretty=format:"%h %b%n---END---" | awk 'BEGIN { RS="---END---"; FS="\n" }
          {
            # Initialize variables for hash, body, and files
            hash = ""
            body = ""
            files_changed = ""
      
            # Iterate over each line
            for (i = 1; i <= NF; i++) {
              line = $i
              
              # If the line is a commit hash with the body (first line), extract the hash and body
              if (i == 1) {
                split(line, parts, " ")
                hash = parts[1]
                body = substr(line, length(hash) + 2)
                sub(/^[ \t]+/, "", body)  # Remove leading spaces
                sub(/[ \t]+$/, "", body)  # Remove trailing spaces
              }
              # Otherwise, it's a file name, so append it to the files_changed variable
              else if (line != "") {
                files_changed = files_changed "<li>" line "</li>"
              }
            }
      
            # If the commit body is not empty, format the body and files for the table
            if (body !~ /^[[:space:]]*$/) {
              # Replace consecutive newlines with <br><br> for normal text formatting
              gsub(/\n+/, "\n\n", body)
              
              # Handle bullet points formatting
              gsub(/(\n)\* /, "\n* ", body)         # Normal bullet points
              gsub(/\n  \* /, "  * ", body)         # Sub-bullet points with 2 spaces
              gsub(/\* /, " * ", body)              # Add a line before the bullet point
              
              # Create the table row, adding the commit hash, body, and files
              print "<tr><td><a href=\"" repo_url "https://github.com/mriffey1/ConConnect/commit/" hash "\">" hash "</a></td><td>" body "</td><td><ul>" files_changed "</ul></td></tr>"
            }
          }')
          
          # Wrap the table around the commit rows
          commit_table="<table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\"><thead><tr><th width=\"25%\">Commit Hash</th><th width=\"50%\">Commit Body</th><th width=\"25%\">Files Changed</th></tr></thead><tbody>"
          commit_table+="$commit_data</tbody></table>"
          
          echo "Commit Table:"
          echo "$commit_table"
          
          # Save the commit table to the environment variable
          echo "COMMIT_TABLE<<EOF" >> $GITHUB_ENV
          echo "$commit_table" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

        

      - name: Find existing pull request
        id: find_pr
        run: |
          pr=$(gh pr list --head documentation-updates --state open --json number --jq '.[0].number')
          echo "PR_NUMBER=$pr" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PR description if exists
        if: env.PR_NUMBER != ''
        run: |
          gh pr edit $PR_NUMBER --body "${{ env.COMMIT_BODIES }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a draft pull request if not exists
        if: env.PR_NUMBER == ''
        run: |
          gh pr create --base main --head documentation-updates --title "Draft Pull Request from documentation-updates" --body "${{ env.COMMIT_BODIES }}" --draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add documentation label to the pull request
        if: env.PR_NUMBER != ''
        run: |
          gh pr edit $PR_NUMBER --add-label "documentation"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
