name: Update PR with Commit Messages

on:
  push:
    branches:
      - doc-updates

jobs:
  update_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to ensure you have the full commit history

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Authenticate GitHub CLI
        run: gh auth setup-git
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch all branches
        run: git fetch --all

      - name: Get commit message bodies
        id: get_commit_bodies
        run: |
          commit_bodies=$(git log origin/main..origin/doc-updates --pretty=format:"%H%n%b%n---END---" --name-only | awk 'BEGIN { RS="---END---"; FS="\n" } 
          {
            full_hash=$1; 
            short_hash=substr($1, 1, 7);
            body="";
            files="";
            include_commit=0;
            for (i=2; i<=NF; i++) {
              if ($i !~ /\.yml$/ && $i !~ /^$/) {
                if ($i ~ /^[^ ]+/) {
                  files = files "  * " $i "\n";  # Capture changed files
                }
                include_commit=1;
              }
              # Check for lines with multiple spaces and clean them
              if (i > 2 && $i !~ /^[^ ]+$/ && $i ~ /  +/) {
                gsub(/  +/, " ", $i);  # Replace multiple spaces with a single space
                body = body $i "\n";
              } else if (i > 2 && $i !~ /^[^ ]+$/) {
                body = body $i "\n";
              }
            }
            if (include_commit && body != "") {
              printf "[%s](https://github.com/${{ github.repository }}/commit/%s)\n", short_hash, full_hash;
              if (files != "") {
                printf "* %s", files;  # Print changed files
              }
              printf "  * %s", body;
            }
          }')
          echo "Commit Bodies:"
          echo "$commit_bodies"  # Output the filtered commit bodies to the log
          echo "COMMIT_BODIES<<EOF" >> $GITHUB_ENV
          echo "$commit_bodies" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Find existing pull request
        id: find_pr
        run: |
          pr=$(gh pr list --head doc-updates --state open --json number --jq '.[0].number')
          echo "PR_NUMBER=$pr" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PR description if exists
        if: env.PR_NUMBER != ''
        run: |
          gh pr edit $PR_NUMBER --body "${{ env.COMMIT_BODIES }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a draft pull request if not exists
        if: env.PR_NUMBER == ''
        run: |
          gh pr create --base main --head doc-updates --title "Draft Pull Request from doc-updates" --body "${{ env.COMMIT_BODIES }}" --draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
