name: Update Changelog

on:
  workflow_dispatch:

jobs:
  update_changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure CHANGELOG.md exists
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
          fi

      - name: Set Git identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Fetch closed PRs since the last tag or commit
        id: pr_details
        run: |
          PR_LIST=$(gh pr list --state closed --base main --json number,title,body --jq '.[] | "\(.number): \(.title) \(.body)"')
          echo "$PR_LIST" > pr_list.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Append PR descriptions to CHANGELOG.md
        run: |
          while read -r pr; do
            PR_NUMBER=$(echo "$pr" | cut -d':' -f1)
            PR_TITLE=$(echo "$pr" | cut -d':' -f2-)
            echo "## [PR #$PR_NUMBER] - $PR_TITLE" >> CHANGELOG.md
          done < pr_list.txt

      - name: Commit changelog using GitHub API
        id: commit_changes
        run: |
          FILE_CONTENT=$(base64 -w 0 CHANGELOG.md) # Encode the changelog file content to base64
          COMMIT_MESSAGE="Update changelog"
          REPO="mriffey1/ConConnect"
          BRANCH="main"
          
          # Get the latest commit SHA on the branch
          LATEST_COMMIT=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/$REPO/git/refs/heads/$BRANCH | jq -r '.object.sha')
          
          # Get the base tree SHA of the latest commit
          BASE_TREE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/$REPO/git/commits/$LATEST_COMMIT | jq -r '.tree.sha')
          
          # Create a new blob with the changelog content
          NEW_BLOB=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d "{\"content\":\"$FILE_CONTENT\", \"encoding\": \"base64\"}" \
            https://api.github.com/repos/$REPO/git/blobs | jq -r '.sha')
          
          # Create a new tree object with the updated changelog
          NEW_TREE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d "{\"base_tree\": \"$BASE_TREE\", \"tree\": [{\"path\": \"CHANGELOG.md\", \"mode\": \"100644\", \"type\": \"blob\", \"sha\": \"$NEW_BLOB\"}]}" \
            https://api.github.com/repos/$REPO/git/trees | jq -r '.sha')
          
          # Create a new commit object with the updated tree
          NEW_COMMIT=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d "{\"message\": \"$COMMIT_MESSAGE\", \"tree\": \"$NEW_TREE\", \"parents\": [\"$LATEST_COMMIT\"]}" \
            https://api.github.com/repos/$REPO/git/commits | jq -r '.sha')
          
          # Update the reference of the branch to point to the new commit
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X PATCH \
            -d "{\"sha\": \"$NEW_COMMIT\"}" \
            https://api.github.com/repos/$REPO/git/refs/heads/$BRANCH
